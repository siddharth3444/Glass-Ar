{"version":3,"sources":["components/render.js","components/TryOn.js","components/App.js","serviceWorker.js","index.js"],"names":["model","glassesObj","faceObj","triangle","bg","video","renderer","camera","container","scene","videoSprite","IntializeThreejs","objName","document","getElementById","THREE","videoWidth","videoHeight","position","z","x","y","minFilter","map","depthWrite","side","add","center","set","scale","copy","light","lightAmb","setTheLights","triGeo","vertices","push","faces","visible","setTriangleToScene","OBJLoader","load","process","obj","traverse","child","geometry","color","material","colorWrite","renderOrder","FBXLoader","object","name","setGlassesToScene","antialias","alpha","preserveDrawingBuffer","setPixelRatio","window","devicePixelRatio","setSize","appendChild","domElement","addEventListener","onWindowResize","animate","aspect","updateProjectionMatrix","setClearColor","needsUpdate","requestAnimationFrame","render","async","renderPrediction","predictions","estimateFaces","length","i","points","scaledMesh","v2","v1","v3","verticesNeedUpdate","computeFaceNormals","p1","p2","scaleFactor","distanceTo","faceBasePos","basePosition","lkt","normal","clone","transformDirection","matrixWorld","lktFace","lookAt","diffPosX","diffPosY","posFactor","windowWidth","rotFactor","posFactorY","windowHeight","rotFactorY","rotation","Math","abs","faceScale","updateWorldMatrix","TryOn","useEffect","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","oncanplay","e","play","tf","facemesh","maxFaces","IntializeEngine","init","React","createElement","className","id","App","Component","onReady","this","ready","Boolean","location","hostname","match","ReactDOM","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54d93961.chunk.js","sourcesContent":["import * as THREE from 'three';\r\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\r\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\r\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader';\r\nimport * as facemesh from '@tensorflow-models/facemesh';\r\nimport * as tf from '@tensorflow/tfjs-core';\r\n\r\n\r\nvar model;\r\nvar glassesObj;\r\nvar faceObj;\r\nvar triangle;\r\nvar bg;\r\nvar video;\r\nlet renderer;\r\nlet camera;\r\nvar container;\r\nlet scene;\r\nlet videoSprite;\r\nlet windowWidth = 640;\r\nlet windowHeight = 480;\r\n\r\nvar glass=\"/obj/Aviaattorit.fbx\"\r\nvar scaleFs=8.0;\r\n\r\n// var glass=\"/obj/sunglasses-free/source/oculos.fbx\"\r\n// var scaleFs=0.5;\r\n\r\n\r\nfunction setVideoContent(){\r\n    \r\n    camera = new THREE.PerspectiveCamera(50, video.videoWidth / video.videoHeight, 1, 5000);\r\n    camera.position.z = video.videoHeight;\r\n    camera.position.x = -video.videoWidth / 2;\r\n    camera.position.y = -video.videoHeight / 2;\r\n\r\n    bg = new THREE.Texture(video);\r\n\r\n    bg.minFilter = THREE.LinearFilter;\r\n\r\n    videoSprite = new THREE.Sprite(new THREE.MeshBasicMaterial({\r\n        map: bg,\r\n        depthWrite: false,\r\n        side: THREE.DoubleSide\r\n    }));\r\n    \r\n    scene = new THREE.Scene();\r\n\r\n    scene.add(videoSprite);\r\n    videoSprite.center.set(0.5, 0.5);\r\n    videoSprite.scale.set(-video.videoWidth, video.videoHeight, 1);\r\n    videoSprite.position.copy(camera.position);\r\n    videoSprite.position.z = 0;\r\n\r\n}\r\n\r\nfunction setTriangleToScene(){\r\n    const triGeo = new THREE.Geometry();\r\n    triGeo.vertices.push(new THREE.Vector3(1, 0, 0));\r\n    triGeo.vertices.push(new THREE.Vector3(-1, 0, 0));\r\n    triGeo.vertices.push(new THREE.Vector3(0, 0, 1));\r\n\r\n    triGeo.faces.push(new THREE.Face3(0, 1, 2));\r\n\r\n    triangle = new THREE.Mesh(triGeo, new THREE.MeshBasicMaterial({ side: THREE.DoubleSide }));\r\n    triangle.visible = false;\r\n    scene.add(triangle);\r\n}\r\n\r\nfunction setTheLights(){\r\n    var light = new THREE.PointLight(0xeeeeee);\r\n    light.position.set(10, 50, 20);\r\n    scene.add(light);\r\n     \r\n    var lightAmb = new THREE.AmbientLight(0xff77ff);\r\n    scene.add(lightAmb);\r\n}\r\n\r\nfunction setGlassesToScene(objName){\r\n\r\n    // var mtlLoader = new MTLLoader();\r\n    // mtlLoader.setMaterialOptions({side:THREE.DoubleSide});\r\n    // mtlLoader.load(process.env.PUBLIC_URL+\"/obj/\"+objName+'.mtl', materials => {\r\n    //     materials.preload();\r\n    //     const objLoader = new OBJLoader();\r\n    //     objLoader.setMaterials(materials);\r\n    //     objLoader.load(process.env.PUBLIC_URL+\"/obj/\"+objName+'.obj', obj => {\r\n    //         glassesObj = obj;\r\n    //         glassesObj.name = objName;\r\n    //         glassesObj.renderOrder = 3;\r\n    //         scene.add(glassesObj);\r\n    //     })\r\n    // })\r\n\r\n    var loader = new FBXLoader();\r\n\r\n\r\n\r\n\r\n    loader.load(process.env.PUBLIC_URL+glass, function (object) {\r\n        glassesObj = object;\r\n        glassesObj.name = objName;\r\n        glassesObj.renderOrder = 3;\r\n        scene.add(glassesObj);\r\n    });\r\n}\r\n\r\n\r\nfunction getFaceMask(){\r\n    new OBJLoader().load(process.env.PUBLIC_URL+'/obj/facemesh.obj', obj => {\r\n        obj.traverse(child => {\r\n            if (child instanceof THREE.Mesh) {\r\n                faceObj = new THREE.Mesh(child.geometry, new THREE.MeshLambertMaterial({side: THREE.FrontSide, color: \"blue\"}));\r\n                faceObj.material.colorWrite = false;\r\n                faceObj.renderOrder = 5;\r\n                scene.add(faceObj);\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nexport function IntializeThreejs(objName) {\r\n    video = document.getElementById('tryon-video');\r\n\r\n    container = document.getElementById('threejsContainer');\r\n    setVideoContent();\r\n\r\n    setTheLights();\r\n\r\n    setTriangleToScene();\r\n\r\n    getFaceMask();\r\n    \r\n    setGlassesToScene(objName);\r\n\r\n    renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true, preserveDrawingBuffer: true });\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(windowWidth, windowWidth * video.videoHeight / video.videoWidth);\r\n    \r\n    container.appendChild(renderer.domElement);\r\n    window.addEventListener('resize', onWindowResize, false);\r\n    animate();\r\n}\r\n\r\nfunction onWindowResize() {\r\n    camera.aspect = video.videoWidth / video.videoHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(windowWidth, windowWidth * video.videoHeight / video.videoWidth);\r\n    renderer.setClearColor( 0xeeeeee, 1 );\r\n}\r\n\r\nfunction animate() {\r\n    bg.needsUpdate = true;\r\n    requestAnimationFrame(animate);\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nexport async function IntializeEngine() {\r\n    await tf.setBackend('webgl');\r\n    model = await facemesh.load({ maxFaces: 1 });\r\n    renderPrediction();\r\n}\r\n\r\nasync function renderPrediction() {\r\n    \r\n    const predictions = await model.estimateFaces(video);\r\n\r\n    if (predictions.length > 0) {\r\n\r\n        faceObj.visible = true;\r\n        glassesObj.visible = true;\r\n        for (let i = 0; i < predictions.length; i++) {\r\n            const points = predictions[i].scaledMesh;\r\n\r\n            const v2 = new THREE.Vector3(-points[7][0], -points[7][1], -points[7][2]);\r\n            const v1 = new THREE.Vector3(-points[175][0], -points[175][1], -points[175][2])\r\n            const v3 = new THREE.Vector3(-points[263][0], -points[263][1], -points[263][2])\r\n\r\n            triangle.geometry.vertices[0].copy(v1);\r\n            triangle.geometry.vertices[1].copy(v2);\r\n            triangle.geometry.vertices[2].copy(v3);\r\n            triangle.geometry.verticesNeedUpdate = true;\r\n            triangle.geometry.computeFaceNormals();\r\n\r\n            const p1 = new THREE.Vector3(-points[10][0], -points[10][1], -points[10][2]);\r\n            const p2 = new THREE.Vector3(-points[175][0], -points[175][1], -points[175][2]);\r\n            const scaleFactor = p1.distanceTo(p2) / 110.5;\r\n\r\n            const faceBasePos = new THREE.Vector3(-points[168][0], -points[5][1], -points[10][2]-190);\r\n            const basePosition = new THREE.Vector3(-points[168][0], -points[1][1], -points[10][2]-160);\r\n            const lkt = triangle.geometry.faces[0].normal.clone();\r\n            lkt.transformDirection(triangle.matrixWorld);\r\n            lkt.add(basePosition);\r\n\r\n            const lktFace = triangle.geometry.faces[0].normal.clone();\r\n            lktFace.transformDirection(triangle.matrixWorld);\r\n            lktFace.add(faceBasePos);\r\n\r\n            faceObj.position.set(faceBasePos.x, faceBasePos.y, faceBasePos.z);\r\n            glassesObj.position.set(basePosition.x, basePosition.y, basePosition.z);\r\n            faceObj.lookAt(lktFace);\r\n            glassesObj.lookAt(lkt);\r\n            \r\n            const diffPosX = basePosition.x - camera.position.x;\r\n            const diffPosY = basePosition.y - camera.position.y;\r\n            const posFactor = windowWidth*3.5 / 800;\r\n            const rotFactor = windowWidth * 1.50;\r\n            const posFactorY = windowHeight*4.5 / 600;\r\n            const rotFactorY = windowHeight*1200 / 600;\r\n\r\n            faceObj.position.x += diffPosX / posFactor;\r\n            glassesObj.position.x += diffPosX / posFactor;\r\n            faceObj.rotation.y += -diffPosX/ rotFactor;\r\n            glassesObj.rotation.y += -diffPosX/ rotFactor;\r\n\r\n            faceObj.position.y += diffPosY / posFactorY;\r\n            glassesObj.position.y += diffPosY / posFactorY;\r\n            faceObj.rotation.x += diffPosY/ rotFactorY;\r\n            glassesObj.rotation.x += diffPosY/ rotFactorY;\r\n\r\n            glassesObj.rotation.x += 0.10;\r\n\r\n            if(Math.abs(glassesObj.rotation.y) > 0.15){\r\n                faceObj.position.z -= 40;\r\n                glassesObj.position.z -= 40;\r\n            }\r\n \r\n\r\n            glassesObj.scale.set(scaleFactor*scaleFs,scaleFactor*scaleFs,scaleFactor*1.35*scaleFs);\r\n            const faceScale = scaleFactor * 1.10;\r\n            faceObj.scale.set(faceScale,faceScale,faceScale);\r\n\r\n            faceObj.updateWorldMatrix();\r\n            glassesObj.updateWorldMatrix();\r\n\r\n        }\r\n    }\r\n    else {\r\n        glassesObj.visible = false;\r\n        faceObj.visible = false;\r\n    }\r\n    requestAnimationFrame(renderPrediction);\r\n}\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport '../style/TryOn.style.css';\r\n\r\nimport {\r\n    IntializeEngine, IntializeThreejs\r\n} from './render.js';\r\n\r\n\r\nexport const TryOn = () => {\r\n\r\n    useEffect(() => {\r\n\r\n        async function init() {\r\n            var video = document.getElementById('tryon-video');\r\n\r\n            await navigator.mediaDevices.getUserMedia({\r\n                'audio': false,\r\n                'video': {\r\n                    facingMode: 'user',\r\n                }\r\n            }).then(stream => {\r\n                video.srcObject = stream;\r\n            });\r\n\r\n            video.oncanplay = (e) => {\r\n                video.play();\r\n                IntializeThreejs(\"purple1\");\r\n                IntializeEngine();\r\n            }\r\n        }\r\n\r\n        init();\r\n\r\n        return () => {\r\n\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"row arcomp\">\r\n            <div id=\"threejsContainer\">\r\n                <video id=\"tryon-video\"></video>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { TryOn } from './TryOn'\r\n\r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <TryOn onReady={this.ready}/>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  \r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.style.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}